package com.controller;



import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;

import org.springframework.web.bind.annotation.DeleteMapping;

import org.springframework.web.bind.annotation.GetMapping;

import org.springframework.web.bind.annotation.PathVariable;

import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;

import org.springframework.web.bind.annotation.RequestMapping;

import org.springframework.web.bind.annotation.RestController;

import com.dao.UserRepository;


import com.feign.PetFeign;

import com.pojos.User;
import com.userbo.UserBo;



@RestController

@RequestMapping("/user")



public class UserController {

 @Autowired

 private UserRepository userRep;

 @Autowired
 PetFeign pf;

 @GetMapping("/getUser")

 public Iterable<User> getUser()

 {

 return userRep.findAll();

 }



 @PostMapping("/saveUser")

 public User saveUser(@RequestBody User user)

 {

 System.out.println(user);

 userRep.save(user);

 return user;

 }
 @PutMapping("/putUser/{userId}")

 public User updateUser(@RequestBody User user,@PathVariable("userId") String userId)

 {



	user.setUserId(userId);

 System.out.println(user);



 userRep.save(user);

 return user;

 }

 @DeleteMapping("/deleteUser/{userId}")

 public boolean deleteUser(@PathVariable("userId") String userId)

 {

 System.out.println(userId);

 userRep.deleteById(userId);

 return true;

 }



 @GetMapping("/findOneUser/{userId}")

 public User findOneUser(@PathVariable("userId") String userId)

 {

 Optional<User> user= userRep.findById(userId);

 return user.get();

 }

	
	@GetMapping("/findOneInAll3/{userId}")
 public UserBo findOneInAll3(String userId) {
		Optional<User> user = userRep.findById(userId);
		User ur = user.get();

		UserBo bo = new UserBo();

		bo.setUserName(ur.getUserName());
		bo.setUserPwd(ur.getUserPwd());
		bo.setUserId(ur.getUserId());
		bo.setEmail(ur.getEmail());
		bo.setConfirmed(ur.getConfirmed());
		bo.setPetId(ur.getPetId());
		bo.setPetPrice(pf.getpetPrice(ur.getPetId()));
		return bo;
	}
	@GetMapping("/findByPetId/{userId}")
	public UserBo findOneInAll2(@PathVariable("userId") String userId)
	 {
		
	  return findOneInAll3(userId);
	 }
 
 
 
}